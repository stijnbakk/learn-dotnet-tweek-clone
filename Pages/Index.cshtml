@page

@model IndexModel

@{
    ViewData["Title"] = "Home page";
}

<script>
    htmx.onLoad(function(content) {
    var sortables = content.querySelectorAll(".sortable");
    for (var i = 0; i < sortables.length; i++) {
      var sortable = sortables[i];
      var sortableInstance = new Sortable(sortable, {
          animation: 150,
          ghostClass: 'blue-background-class',

          // Make the `.htmx-indicator` unsortable
          filter: ".htmx-indicator",
          onMove: function (evt) {
            return evt.related.className.indexOf('htmx-indicator') === -1;
          },

        // TODO: fix bug where sorting after the first time is impossible
          @* // Disable sorting on the `end` event
          onEnd: function (evt) {
            console.log("temporary halting sorting")
            this.option("disabled", true);
          } *@
      });

      // Re-enable sorting on the `htmx:afterSwap` event
      sortable.addEventListener("htmx:afterSwap", function() {
        console.log("after swap")
        sortableInstance.option("disabled", false);
        console.log(sortableInstance)
      });
    }
})
</script>

<div class="p-8 min-h-screen flex flex-col gap-8">
  <div class="weekViewDetails flex flex-row items-center">
    <div class="flex flex-col gap-2 flex-grow">
      <h1 class="font-bold text-5xl">@Model.WeekOverview.MonthName</h1>
      <p class='@((Model.WeekOverview.IsThisWeek) ? "text-blue-500" : "")'>Week @Model.WeekOverview.WeekNumber</p>
    </div>
    <div class="flex-grow-0 flex flex-row gap-2">
    <a class="bg-gray-600 p-2 rounded text-white text-xs" href='/?startDate=@Model.WeekOverview.StartDate.AddDays(-7).ToString("yyyy-MM-dd")'>&#60;Last week</a>
    <a class="bg-gray-600 p-2 rounded text-white text-xs" href='/?startDate=@Model.WeekOverview.StartDate.AddDays(7).ToString("yyyy-MM-dd")'>Next week &#62;</a>
    </div>
  </div>
    <div class="w-full weekGridContainer flex-grow h-full grid gap-5">
      
        @foreach (var day in Model.WeekOverview.WeekDays)
        {
            <div class="col-span-1 @(day.WeekdayName.ToLower())" >
                <h1 class='font-bold text-xl @(day.Date == DateOnly.FromDateTime(DateTime.Today) ? "text-blue-500" : "")'>
                    @day.WeekdayName</h1>
                    @await Html.PartialAsync("/Pages/Components/WeekView/List.cshtml", day.DayItems)
                <form method="post">
                    <input type="hidden" asp-for="@Model.NewItem.LinkedDate" value="@day.Date" autofocus />
                    <input asp-for="NewItem.Title"
                        class="focus:border-b-2 focus:border-black py-2 border-b-[1px] border-collapse border-gray-300 w-full outline-none" />
                </form>
            </div>
        }

    </div>
    
    
    
</div>
